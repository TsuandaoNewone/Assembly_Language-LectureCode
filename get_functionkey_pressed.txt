; multi-segment executable file template.

data segment
    ; add your data here!
    pkey    db "press any key...$"
    F1      DB "F1$"
    F2      DB "F2$"
    F3      DB "F3$"
    ERR     DB "ERROR$"
ends

stack segment
    dw   128  dup(0)
ends

code segment
start:
; set segment registers:
    mov ax, data
    mov ds, ax
    mov es, ax
    
GET_FKEY:
    MOV     AH, 00H
    INT     16H
    CMP     AH, 3BH
    JE      OP1
    CMP     AH, 3CH
    JE      OP2
    CMP     AH, 3DH
    JE      OP3
    JMP     ERROR
OP1:
    MOV     DX, OFFSET F1
    JMP     FINISH
OP2:
    MOV     DX, OFFSET F2
    JMP     FINISH    
OP3:
    MOV     DX, OFFSET F3
    JMP     FINISH        
ERROR:
    MOV     DX, OFFSET ERR
FINISH:
    MOV     AH, 09H
    INT     21H
               
    mov     ax, 4c00h ; exit to operating system.
    int 21h    
ends

end start ; set entry point and stop the assembler.
